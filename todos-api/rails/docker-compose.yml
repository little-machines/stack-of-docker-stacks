# https://github.com/docker/compose/issues/374#issuecomment-284695410
version: "3.7"
services:
  web:
    image: "ghcr.io/vincetse/todos-api"
    networks:
    - "default"
    - "dbnet"
    environment:
      PORT: "3000"
      RAILS_ENV: "production"
      DATABASE_URL: "postgres://postgres:p0stgres@db/app?reconnect=true&connect_timeout=5"
      SECRET_KEY_BASE: "450c29d2711c276c61d341bc666c87e995470f4c834ba68dea5cd0b9bca3c023a2f8de44b0c9e2122ec65e7272a8aab2fde9f9b62225a6ee60bea11504536a45"
      WORKER_BOOT_TIMEOUT: 300
    ports:
    - target: 3000
      published: ${SERVICE_PORT}
      protocol: tcp
      mode: ingress
    command:
    - "foreman"
    - "run"
    - "web"
    depends_on:
    - "db"
    #healthcheck:
    #  test: ["CMD", "curl", "-f", "http://localhost:3000/health_check"]
    #  interval: "2m"
    #  timeout: "300s"
    #  retries: 3
    #  start_period: "240s"
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: "10s"
        order: "start-first"
      resources:
        limits:
          cpus: "1"
          memory: "256m"
        reservations:
          cpus: "1"
          memory: "256m"
      restart_policy:
        condition: "on-failure"
        delay: "20s"
        max_attempts: 3
        window: "120s"

  migrate:
    image: "ghcr.io/vincetse/todos-api"
    networks:
    - "default"
    - "dbnet"
    environment:
      RAILS_ENV: "production"
      DATABASE_URL: "postgres://postgres:p0stgres@db/app?reconnect=true&connect_timeout=5"
      SECRET_KEY_BASE: "450c29d2711c276c61d341bc666c87e995470f4c834ba68dea5cd0b9bca3c023a2f8de44b0c9e2122ec65e7272a8aab2fde9f9b62225a6ee60bea11504536a45"
    command:
    - "foreman"
    - "run"
    - "release"
    depends_on:
    - "db"
    deploy:
      restart_policy:
        condition: "on-failure"
        delay: "10s"
        max_attempts: 3
        window: "120s"

  client:
    image: "ghcr.io/infrastructure-as-code/httpie"
    networks:
    - "default"
    entrypoint:
    - "/bin/watch"
    command:
    - "http"
    - "GET"
    - "http://web:${SERVICE_PORT}/health_check"
    depends_on:
    - "web"
    deploy:
      restart_policy:
        condition: "on-failure"
        delay: "60s"

networks:
  dbnet:
    name: "todos-api-rails-dbnet"
    external: true
